#ifndef _LCD_H
#define _LCD_H 1

#include <stdint.h>
#include "pins.h"
#include "spi.h"

struct LCDt;

#define LCD_BUFFER_SIZE 320 * 40

typedef void (*LCDRenderLine)(struct LCDt* lcd, uint16_t* buffor, uint16_t startLine, uint16_t lines, uint16_t width);

typedef struct LCDt {
	SPIt spi;
	Pin CS;
	Pin A0;
	Pin Reset;
	uint16_t width;
	uint16_t height;
	LCDRenderLine renderer;

	uint16_t currentLine;
	uint16_t buffer[LCD_BUFFER_SIZE];

	void (*SendCommand)(struct LCDt* lcd, uint8_t command);
	void (*SendData8)(struct LCDt* lcd, uint8_t data);
	void (*SendData16)(struct LCDt* lcd, uint16_t data);
} LCDt;

void InitLCD(LCDt* lcd, uint16_t width, uint16_t height, Pin mosi, Pin miso, Pin clock, Pin CS, Pin A0, Pin reset, LCDRenderLine renderer);


typedef enum {
	ILI9341_COMMAND_SOFTWARE_RESET = 0x01,
	ILI9341_COMMAND_READ_DISPLAY_IDENTIFICATION_INFORMATION = 0x04,
	ILI9341_COMMAND_READ_DISPLAY_STATUS = 0x09,
	ILI9341_COMMAND_READ_DISPLAY_POWER_MODE = 0x0A,
	ILI9341_COMMAND_READ_DISPLAY_MADCTL = 0x0B,
	ILI9341_COMMAND_READ_DISPLAY_PIXEL_FORMAT = 0x0C,
	ILI9341_COMMAND_READ_DISPLAY_IMAGE_FORMAT = 0x0D,
	ILI9341_COMMAND_READ_DISPLAY_SIGNAL_MODE = 0x0E,
	ILI9341_COMMAND_READ_DISPLAY_SELF_DIAGNOSTIC_RESULT = 0x0F,
	ILI9341_COMMAND_ENTER_SLEEP_MODE = 0x10,
	ILI9341_COMMAND_SLEEP_OUT = 0x11,
	ILI9341_COMMAND_PARTIAL_MODE_ON = 0x12,
	ILI9341_COMMAND_NORMAL_DISPLAY_MODE_ON = 0x13,
	ILI9341_COMMAND_DISPLAY_INVERSION_OFF = 0x20,
	ILI9341_COMMAND_DISPLAY_INVERSION_ON = 0x21,
	ILI9341_COMMAND_GAMMA_SET = 0x26,
	ILI9341_COMMAND_DISPLAY_OFF = 0x28,
	ILI9341_COMMAND_DISPLAY_ON = 0x29,
	ILI9341_COMMAND_COLUMN_ADDRESS_SET = 0x2A,
	ILI9341_COMMAND_PAGE_ADDRESS_SET = 0x2B,
	ILI9341_COMMAND_MEMORY_WRITE = 0x2C,
	ILI9341_COMMAND_COLOR_SET = 0x2D,
	ILI9341_COMMAND_MEMORY_READ = 0x2E,
	ILI9341_COMMAND_PARTIAL_AREA = 0x30,
	ILI9341_COMMAND_VERTICAL_SCROLLING_DEFINITION = 0x33,
	ILI9341_COMMAND_TEARING_EFFECT_LINE_OFF = 0x34,
	ILI9341_COMMAND_TEARING_EFFECT_LINE_ON = 0x35,
	ILI9341_COMMAND_MEMORY_ACCESS_CONTROL = 0x36,
	ILI9341_COMMAND_VERTICAL_SCROLLING_START_ADDRESS = 0x37,
	ILI9341_COMMAND_IDLE_MODE_OFF = 0x38,
	ILI9341_COMMAND_IDLE_MODE_ON = 0x39,
	ILI9341_COMMAND_COLMOD_PIXEL_FORMAT_SET = 0x3A,
	ILI9341_COMMAND_WRITE_MEMORY_CONTINUE = 0x3C,
	ILI9341_COMMAND_READ_MEMORY_CONTINUE = 0x3E,
	ILI9341_COMMAND_SET_TEAR_SCANLINE = 0x44,
	ILI9341_COMMAND_GET_SCANLINE = 0x45,
	ILI9341_COMMAND_WRITE_DISPLAY_BRIGHTNESS = 0x51,
	ILI9341_COMMAND_READ_DISPLAY_BRIGHTNESS = 0x52,
	ILI9341_COMMAND_WRITE_CTRL_DISPLAY = 0x53,
	ILI9341_COMMAND_READ_CTRL_DISPLAY = 0x54,
	ILI9341_COMMAND_WRITE_CONTENT_ADAPTIVE_BRIGHTNESS_CONTROL = 0x55,
	ILI9341_COMMAND_READ_CONTENT_ADAPTIVE_BRIGHTNESS_CONTROL = 0x56,
	ILI9341_COMMAND_WRITE_CABC_MINIMUM_BRIGHTNESS = 0x5E,
	ILI9341_COMMAND_READ_CABC_MINIMUM_BRIGHTNESS = 0x5F,
	ILI9341_COMMAND_READ_ID1 = 0xDA,
	ILI9341_COMMAND_READ_ID2 = 0xDB,
	ILI9341_COMMAND_READ_ID3 = 0xDC,
	ILI9341_COMMAND_RGB_INTERFACE_SIGNAL_CONTROL = 0xB0,
	ILI9341_COMMAND_FRAME_RATE_CONTROL_NORMAL = 0xB1,
	ILI9341_COMMAND_FRAME_RATE_CONTROL_IDLE = 0xB2,
	ILI9341_COMMAND_FRAME_RATE_CONTROL_PARTIAL = 0xB3,
	ILI9341_COMMAND_DISPLAY_INVERSION_CONTROL = 0xB4,
	ILI9341_COMMAND_BLANKING_PORCH_CONTROL = 0xB5,
	ILI9341_COMMAND_DISPLAY_FUNCTION_CONTROL = 0xB6,
	ILI9341_COMMAND_ENTRY_MODE_SET = 0xB7,
	ILI9341_COMMAND_BACKLIGHT_CONTROL_1 = 0xB8,
	ILI9341_COMMAND_BACKLIGHT_CONTROL_2 = 0xB9,
	ILI9341_COMMAND_BACKLIGHT_CONTROL_3 = 0xBA,
	ILI9341_COMMAND_BACKLIGHT_CONTROL_4 = 0xBB,
	ILI9341_COMMAND_BACKLIGHT_CONTROL_5 = 0xBC,
	ILI9341_COMMAND_BACKLIGHT_CONTROL_7 = 0xBE,
	ILI9341_COMMAND_BACKLIGHT_CONTROL_8 = 0xBF,
	ILI9341_COMMAND_POWER_CONTROL_1 = 0xC0,
	ILI9341_COMMAND_POWER_CONTROL_2 = 0xC1,
	ILI9341_COMMAND_VCOM_CONTROL_1 = 0xC5,
	ILI9341_COMMAND_VCOM_CONTROL_2 = 0xC7,
	ILI9341_COMMAND_NV_MEMORY_WRITE = 0xD0,
	ILI9341_COMMAND_NV_MEMORY_PROTECTION_KEY = 0xD1,
	ILI9341_COMMAND_NV_MEMORY_STATUS_READ = 0xD2,
	ILI9341_COMMAND_READ_ID4 = 0xD3,
	ILI9341_COMMAND_POSITIVE_GAMMA_CORRECTION = 0xE0,
	ILI9341_COMMAND_NEGATIVE_GAMMA_CORRECTION = 0xE1,
	ILI9341_COMMAND_DIGITAL_GAMMA_CONTROL_1 = 0xE2,
	ILI9341_COMMAND_DIGITAL_GAMMA_CONTROL_2 = 0xE3,
	ILI9341_COMMAND_INTERFACE_CONTROL = 0xF6,
	ILI9341_COMMAND_POWER_CONTROL_A = 0xCB,
	ILI9341_COMMAND_POWER_CONTROL_B = 0xCF,
	ILI9341_COMMAND_DIVER_TIMING_CONTROL_A = 0xE8,
	ILI9341_COMMAND_DIVER_TIMING_CONTROL_B = 0xEA,
	ILI9341_COMMAND_POWER_ON_SEQUENCE_CONTROL = 0xED,
	ILI9341_COMMAND_ENABLE_3_GAMMA = 0xF2,
	ILI9341_COMMAND_PUMP_RADIO_CONTROL = 0xF7
} ILI9341_COMMAND;

#endif
